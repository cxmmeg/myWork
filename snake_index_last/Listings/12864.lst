C51 COMPILER V9.56.0.0   12864                                                             12/22/2017 14:00:41 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\Objects\12864.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\128
                    -64.lst) TABS(2) OBJECT(.\Objects\12864.obj)

line level    source

   1          #include<12864.h>
   2          
   3          bit lcd_busy()
   4           {                          
   5   1          unsigned int he;
   6   1          bit result;
   7   1          lcd=0xff;
   8   1          lcd_id=0;
   9   1          lcd_wr=1;
  10   1          lcd_en = 1;
  11   1          he = lcd;
  12   1          lcd_en = 0;
  13   1          result = (bit)(he&0x80);
  14   1          return(result); 
  15   1       }
  16          
  17          
  18          void initial_lcd()
  19          { 
  20   1          lcd_psb = 1;
  21   1        
  22   1          write_lcd_com(0x30);
  23   1          delay_ms(1);
  24   1        
  25   1          write_lcd_com(0x34);
  26   1          delay_ms(1);
  27   1      
  28   1          write_lcd_com(0x0c);
  29   1          delay_ms(1);
  30   1        
  31   1          write_lcd_com(0x01);  
  32   1          delay_ms(10);
  33   1      
  34   1          write_lcd_com(0x34);//扩展指令模式 0x30为基本指令模式
  35   1          write_lcd_com(0x36);//打开图片显示
  36   1      
  37   1      }
  38          
  39          void clear_lcd()
  40          {
  41   1        unsigned char i,j;
  42   1        
  43   1        for(i=0;i<32;i++)
  44   1        {
  45   2          for(j=0;j<16;j++)
  46   2          {     
  47   3            set_lcd_xy(j,i);      
  48   3      
  49   3            write_lcd_dat(0x00);
  50   3            write_lcd_dat(0x00);
  51   3          }
  52   2          
  53   2        }
  54   1      }
C51 COMPILER V9.56.0.0   12864                                                             12/22/2017 14:00:41 PAGE 2   

  55          
  56          
  57          void write_lcd_com(unsigned char com)
  58          {                          
  59   1        while(lcd_busy());
  60   1        lcd_id=0;
  61   1        lcd_wr=0;
  62   1        lcd=com;
  63   1        lcd_en=1;
  64   1        lcd_en=0;  
  65   1      }
  66          
  67          
  68          void write_lcd_dat(unsigned char dat)
  69          {                          
  70   1        while(lcd_busy());
  71   1        lcd_id=1;
  72   1        lcd_wr=0;
  73   1        lcd=dat;
  74   1        lcd_en=1;
  75   1        lcd_en=0; 
  76   1        
  77   1      }
  78          
  79          unsigned char read_lcd_dat() 
  80          {
  81   1        unsigned char save;
  82   1        while(lcd_busy());
  83   1        lcd_id=1;
  84   1        lcd_wr=1;
  85   1        lcd_en=1;
  86   1        save=lcd;
  87   1        lcd_en=0;
  88   1        return(save);
  89   1      }
  90          
  91          
  92          
  93          void delay_ms(unsigned int z)
  94          {
  95   1        unsigned int i,j;
  96   1        for(i=z;i>0;i--)
  97   1          for(j=110;j>0;j--);
  98   1      }
  99          
 100          
 101          void set_lcd_xy(unsigned char  x,unsigned char  y)
 102          {
 103   1        write_lcd_com(0x80+y);
 104   1        write_lcd_com(0x80+x);
 105   1      }
 106          
 107          
 108          void write_lcd_hanzi(unsigned char x,unsigned char y,unsigned char code *dat)
 109          {
 110   1        unsigned char i;
 111   1        for(i=y;i<=y+15;i++)
 112   1        {
 113   2          set_lcd_xy(x,i);
 114   2          write_lcd_dat(dat[(i-y)*2]);
 115   2          write_lcd_dat(dat[(i-y)*2+1]);
 116   2        }
C51 COMPILER V9.56.0.0   12864                                                             12/22/2017 14:00:41 PAGE 3   

 117   1      }
 118          
 119          void write_lcd_shuzi(unsigned char x,unsigned char y,unsigned char code *dat)
 120          {
 121   1        unsigned char i;
 122   1        for(i=y;i<=y+15;i++)
 123   1        {
 124   2          set_lcd_xy(x,i);
 125   2          write_lcd_dat(dat[i-y]);
 126   2        }
 127   1      }
 128          
 129          unsigned int test_point_exist(unsigned char x, unsigned char y, unsigned int value)
 130          {
 131   1        unsigned int he;
 132   1        unsigned int hui1=0,hui2=0;
 133   1        set_lcd_xy(x,y);
 134   1        hui1=read_lcd_dat();
 135   1        hui1=read_lcd_dat();
 136   1        hui2=read_lcd_dat();
 137   1        he=(hui1<<8)|(hui2);
 138   1        he=he&value; //如果液晶上这个点是亮的 则he为value 若不亮则为 0
 139   1        return (he);
 140   1      }
 141          
 142          void draw_lcd_point(unsigned char x, unsigned char y, unsigned int value)
 143          {
 144   1        unsigned int he;
 145   1        unsigned int hui1=0,hui2=0;
 146   1        set_lcd_xy(x,y);
 147   1        hui1=read_lcd_dat();
 148   1        hui1=read_lcd_dat();
 149   1        hui2=read_lcd_dat();
 150   1        he=(hui1<<8)|(hui2);//he为当前的现场
 151   1        he=he+value; //保证只会在这个点没有点亮的情况下来点亮这个点
 152   1        set_lcd_xy(x,y);
 153   1        write_lcd_dat(he>>8);
 154   1        write_lcd_dat(he);
 155   1      }
 156          
 157          void clear_lcd_point(unsigned char x, unsigned char y, unsigned int value)
 158          {
 159   1        unsigned int he;
 160   1        unsigned int hui1=0,hui2=0;
 161   1        set_lcd_xy(x,y);
 162   1        hui1=read_lcd_dat();
 163   1        hui1=read_lcd_dat();
 164   1        hui2=read_lcd_dat();
 165   1        he=(hui1<<8)|(hui2);//he为当前的现场
 166   1        he=he-value; //会保证只会在这个点已经点亮的情况下来熄灭这个点
 167   1        set_lcd_xy(x,y);
 168   1        write_lcd_dat(he>>8);
 169   1        write_lcd_dat(he);
 170   1      }
 171          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    531    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   12864                                                             12/22/2017 14:00:41 PAGE 4   

   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
